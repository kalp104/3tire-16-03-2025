@model PizzaShop.Repository.ModelView.MenuWithItemsViewModel
@{
    bool canEdit = ViewBag.permission[2].Canedit;
    bool canDelete = ViewBag.permission[2].Candelete;
}

<div class="p-2" id="ModifiersContainer" data-total-modifiers="@Model.TotalItems1">
    @if (Model.Modifiers != null && Model.Modifiers.Any())
    {
        <table class="table text-nowrap">
            <thead>
                <tr>
                    <th><input class="form-check-input" type="checkbox" value="" id="selectAllCheckbox"></th>
                    <th>Name</th>
                    <th>Unit</th>
                    <th>Rate</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var i in Model.Modifiers)
                {
                    <tr>
                        <td><input class="form-check-input item-checkbox" type="checkbox" name="selectedModifierIds"
                                value="@i.Modifierid" data-name="@i.Modifiername"></td>
                        <td>@i.Modifiername</td>
                        <td>@i.Modifierunit</td>
                        <td>@i.Modifierrate</td>
                        <td>
                            <div class="mx-3">@i.Modifierquantity</div>
                        </td>
                        <td>
                            @if (canEdit)
                            {
                                <a class="edit-modifier-link bg-white" data-bs-toggle="modal" data-bs-target="#editModal-Modifier"
                                    data-modifier-id="@i.Modifierid">
                                    <i class="bi bi-pen "></i>
                                </a>
                            }
                            @if (canDelete)
                            {
                                <a data-bs-toggle="modal" class="delete-modifier-link" data-modifier-id="@i.Modifierid"
                                    data-bs-target="#staticBackdrop1-Modifier">
                                    <i class="bi bi-trash"></i>
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="d-flex align-items-center justify-content-center">No Modifiers Found</div>
    }
</div>

<!-- Edit Modifiers Modal -->
<div class="modal fade AddItemBox" id="editModal-Modifier" data-bs-backdrop="static" data-bs-keyboard="false"
    tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editModalLabel">Edit Modifier</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="EditModifier" asp-controller="Menu" method="post" id="editModifierForm">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="modifiersViewModel.Modifierid" id="editModifierId" />
                <input type="hidden" name="Userid" value="@ViewBag.Userid" />
                <div class="modal-body">
                    <div class="row">
                        <div class="col-6 mb-3">
                            <label class="form-label">Modifier Groups</label>
                            <div class="checkbox-container" style="max-height: 150px; overflow-y: auto;">
                                @if (Model.modifiergroups != null && Model.modifiergroups.Any())
                                {
                                    @foreach (var c in Model.modifiergroups)
                                    {
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input"
                                                name="modifiersViewModel.Modifiergroupid" value="@c.Modifiergroupid"
                                                id="modifiergroup_@c.Modifiergroupid" />
                                            <label class="form-check-label" for="modifiergroup_@c.Modifiergroupid">
                                                @c.Modifiergroupname
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No modifier groups available.</p>
                                }
                            </div>
                            <span asp-validation-for="modifiersViewModel.Modifiergroupid" class="text-danger"></span>
                        </div>
                        <div class="col-6 form-floating mb-3">
                            <input asp-for="modifiersViewModel.Modifiername" id="editModifierName" type="text"
                                class="form-control" placeholder="Enter modifier name" />
                            <label for="editModifierName">Name</label>
                            <span asp-validation-for="modifiersViewModel.Modifiername" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-4 form-floating mb-3">
                            <input asp-for="modifiersViewModel.Modifierrate" id="editModifierRate" type="number"
                                class="form-control" placeholder="â‚¹" />
                            <label for="editModifierRate">Rate</label>
                            <span asp-validation-for="modifiersViewModel.Modifierrate" class="text-danger"></span>
                        </div>
                        <div class="col-4 form-floating mb-3">
                            <input type="number" asp-for="modifiersViewModel.Modifierquantity" id="editModifierQuantity"
                                class="form-control" placeholder="Quantity" />
                            <label for="editModifierQuantity">Quantity</label>
                            <span asp-validation-for="modifiersViewModel.Modifierquantity" class="text-danger"></span>
                        </div>
                        <div class="col-4 form-floating mb-3">
                            <select class="form-select" asp-for="modifiersViewModel.Modifierunit" id="editModifierUnit">
                                <option value="0">Select Units</option>
                                <option value="1">Piece</option>
                                <option value="2">Kg</option>
                            </select>
                            <span asp-validation-for="modifiersViewModel.Modifierunit" class="text-danger"></span>
                            <label for="editModifierUnit">Units</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 form-floating mb-3">
                            <textarea asp-for="modifiersViewModel.Modifierdescription" id="editModifierDescription"
                                class="form-control" placeholder="Enter modifier description"></textarea>
                            <label for="editModifierDescription">Description</label>
                            <span asp-validation-for="modifiersViewModel.Modifierdescription"
                                class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn border-primary text-primary"
                        data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Modal (Unchanged) -->
<div class="modal fade" id="staticBackdrop1-Modifier" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-action="DeleteModifier" asp-controller="Menu">
                <div class="modal-body d-flex flex-column justify-content-center align-items-center">
                    <img src="~/images/toppng.com-warning-icon-2400x2400.png" height="40px" width="40px">
                    <div class="">Are you sure you want to delete this modifier?</div>
                </div>
                <input type="hidden" asp-for="Userid" value="@ViewBag.Userid" />
                <input type="hidden" name="modifierid" id="deleteModifierId" value="" />
                <div class="modal-footer d-flex-col justify-content-center">
                    <button type="submit" data-id="modiferid" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn border-primary text-primary" data-bs-dismiss="modal">No</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Scripts -->

<!-- Load jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Load Bootstrap JS (Make sure it's included) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- jQuery Validation (if needed) -->
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        // Edit Modifier Link - Populate Modal
        $(document).on('click', '.edit-modifier-link', function (e) {
            e.preventDefault();
            var modifierId = $(this).data('modifier-id');

            if (!modifierId || modifierId <= 0) {
                console.error("Invalid Modifier ID:", modifierId);
                return;
            }

            console.log("Fetching modifier ID for edit:", modifierId);

            // Reset form
            $('#editModifierForm')[0].reset();

            // Fetch modifier data via AJAX
            $.ajax({
                url: '/Menu/GetModifierData',
                type: 'GET',
                data: { modifierId: modifierId },
                success: function (data) {
                    console.log("Modifier data received:", data);
                    if (data) {
                        // Populate form fields
                        $('#editModifierId').val(data.modifierid);
                        $('#editModifierName').val(data.modifiername);
                        $('#editModifierRate').val(data.modifierrate);
                        $('#editModifierQuantity').val(data.modifierquantity);
                        $('#editModifierUnit').val(data.modifierunit);
                        $('#editModifierDescription').val(data.modifierdescription);

                        // Reset and check modifier groups
                        $('input[name="modifiersViewModel.Modifiergroupid"]').prop('checked', false);
                        if (data.modifiergroupid && data.modifiergroupid.length > 0) {
                            data.modifiergroupid.forEach(function (groupId) {
                                $('#modifiergroup_' + groupId).prop('checked', true);
                            });
                        }
                    }
                    $('#editModal-Modifier').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error - Status:", status, "Error:", error);
                    alert("Error loading modifier details: " + status + " - " + error);
                }
            });
        });

        // Edit Modifier Form Submission
        $(document).on('submit', '#editModifierForm', function (e) {
            e.preventDefault();

            var form = $(this);
            var formData = new FormData(this);

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    console.log("Form submitted successfully.");

                    // Hide modal and remove backdrop properly
                    $('#editModal-Modifier').modal('hide');
                    $('.modal-backdrop').remove();
                    $('body').removeClass('modal-open');

                    // Reload page or update UI
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error - Status:", status, "Error:", error);
                    alert("Error submitting edit form.");
                }
            });
        });

        // Ensure modal closes properly on manual close
        $('#editModal-Modifier').on('hidden.bs.modal', function () {
            $('.modal-backdrop').remove();
            $('body').removeClass('modal-open');
        });

        // Delete Modifier Link
        $(document).on('click', '.delete-modifier-link', function (e) {
            e.preventDefault();
            var modifierId = $(this).data('modifier-id');

            if (!modifierId || modifierId === "0") {
                console.error("Invalid Modifier ID:", modifierId);
                return;
            }

            console.log("Modifier ID clicked:", modifierId);

            // Set the hidden input value
            $('#deleteModifierId').val(modifierId);
        });
    });


</script>
